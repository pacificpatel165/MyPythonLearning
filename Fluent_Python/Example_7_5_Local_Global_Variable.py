# coding=utf-8

"""Variable b is local, because it is assigned a value in the body of the function."""

'''But the fact is, when Python compiles the body of the function, it decides that b is a local
variable because it is assigned within the function. The generated bytecode reflects this
decision and will try to fetch b from the local environment. Later, when the call f2(3)
is made, the body of f2 fetches and prints the value of the local variable a, but when
trying to fetch the value of local variable b it discovers that b is unbound.'''

b = 6


def f2(a):
    print(a)
    print(b)
    b = 9


f2(3)

'''If we want the interpreter to treat b as a global variable in spite of the assignment within
the function, we use the global declaration:'''
'''
b = 6

def f3(a):
    global b
    print(a)
    print(b)
    b = 9


f3(3)
'''
